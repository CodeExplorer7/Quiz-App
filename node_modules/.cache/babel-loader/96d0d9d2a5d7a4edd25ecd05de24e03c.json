{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport './App.css';\nimport Data from './components/Data.json';\nexport const App = () => {\n  _s();\n\n  const questions = Data;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score => score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleRefresh = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n  };\n\n  let status = score < questions.length ? 'МЕГАПЛОХ' : 'МЕГАПЛОХ';\n  let ScoreLeft = questions.length - score;\n\n  if (ScoreLeft = 0) {}\n};\n\n_s(App, \"/sy2pvX1Q0450pE8xQIdkgXJpdM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Data","App","questions","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","handleAnswerOptionClick","isCorrect","nextQuestion","length","handleRefresh","status","ScoreLeft"],"sources":["/Users/vaceslav/new-app/src/App.tsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport './App.css';\nimport Data from './components/Data.json';\nimport {Result} from './components/Result';\nimport {Statusbar} from './components/Statusbar';\nimport {RefreshBtn} from './components/RefreshBtn';\nimport {QuestionCount} from './components/QuestionCount';\nimport {QuestionText} from \"./components/QuestionText\";\nimport {AnswerSection} from \"./components/AnswerSection\";\nimport { ScoreLeftToWin } from \"./components/ScoreLeftToWin\";\n\n\n\nexport const App = () => {\n  const questions = Data;\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n\n  const handleAnswerOptionClick = (isCorrect: boolean) => {\n\n    if (isCorrect) {\n      setScore(score => score + 1);\n    }\n\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n\n      setCurrentQuestion(nextQuestion);\n\n    } else {\n\n      setShowScore(true);\n\n    }\n\n  };\n\n  const handleRefresh = () => {\n\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n\n  };\n\n\n  let status = (score < questions.length) ? 'МЕГАПЛОХ' : 'МЕГАПЛОХ';\n  let ScoreLeft = questions.length - score\n  \nif (ScoreLeft = 0) {\n\n}\n  \n}\n\n\n\n\n\n"],"mappings":";;AAAA,SAAeA,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAWA,OAAO,MAAMC,GAAG,GAAG,MAAM;EAAA;;EACvB,MAAMC,SAAS,GAAGF,IAAlB;EAEA,MAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,CAAD,CAAtD;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMU,uBAAuB,GAAIC,SAAD,IAAwB;IAEtD,IAAIA,SAAJ,EAAe;MACbJ,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAR;IACD;;IAGD,MAAMM,YAAY,GAAGR,eAAe,GAAG,CAAvC;;IAEA,IAAIQ,YAAY,GAAGT,SAAS,CAACU,MAA7B,EAAqC;MAEnCR,kBAAkB,CAACO,YAAD,CAAlB;IAED,CAJD,MAIO;MAELH,YAAY,CAAC,IAAD,CAAZ;IAED;EAEF,CAnBD;;EAqBA,MAAMK,aAAa,GAAG,MAAM;IAE1BT,kBAAkB,CAAC,CAAD,CAAlB;IACAE,QAAQ,CAAC,CAAD,CAAR;IACAE,YAAY,CAAC,KAAD,CAAZ;EAED,CAND;;EASA,IAAIM,MAAM,GAAIT,KAAK,GAAGH,SAAS,CAACU,MAAnB,GAA6B,UAA7B,GAA0C,UAAvD;EACA,IAAIG,SAAS,GAAGb,SAAS,CAACU,MAAV,GAAmBP,KAAnC;;EAEF,IAAIU,SAAS,GAAG,CAAhB,EAAmB,CAElB;AAEA,CA5CM;;GAAMd,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}