{"ast":null,"code":"var _jsxFileName = \"/Users/vaceslav/new-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './App.css';\nimport Data from './components/Data.json';\nimport { Result } from './components/Result';\nimport { Statusbar } from './components/Statusbar';\nimport { RefreshBtn } from './components/RefreshBtn';\nimport { QuestionCount } from './components/QuestionCount';\nimport { QuestionText } from \"./components/QuestionText\";\nimport { AnswerSection } from \"./components/AnswerSection\";\nimport { ScoreLeftToWin } from \"./components/ScoreLeftToWin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const questions = Data;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [abc, setabc] = useState(true);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score => score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleRefresh = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n  };\n\n  let status = score < questions.length ? 'МЕГАПЛОХ' : 'МЕГАХОРОШ';\n  let ScoreLeft = questions.length - score;\n\n  if (ScoreLeft = 0) {\n    setabc(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section__score\",\n      children: abc ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Result, {\n          score: score,\n          questions: questions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Statusbar, {\n          score: score,\n          questions: questions,\n          status: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ScoreLeftToWin, {\n          ScoreLeftToWin: ScoreLeft,\n          questions: questions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RefreshBtn, {\n          handleRefresh: handleRefresh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 78\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Result, {\n          score: score,\n          questions: questions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Statusbar, {\n          score: score,\n          questions: questions,\n          status: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 59\n        }, this), /*#__PURE__*/_jsxDEV(RefreshBtn, {\n          handleRefresh: handleRefresh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 124\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizz\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(QuestionCount, {\n          currentQuestion: currentQuestion,\n          questions: questions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(QuestionText, {\n          questions: questions[currentQuestion]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AnswerSection, {\n          questions: questions[currentQuestion],\n          handleAnswerOptionClick: handleAnswerOptionClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"S6YA7NnGVJcutNFlHce+XRT4VvY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Data","Result","Statusbar","RefreshBtn","QuestionCount","QuestionText","AnswerSection","ScoreLeftToWin","App","questions","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","abc","setabc","handleAnswerOptionClick","isCorrect","nextQuestion","length","handleRefresh","status","ScoreLeft"],"sources":["/Users/vaceslav/new-app/src/App.tsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport './App.css';\nimport Data from './components/Data.json';\nimport {Result} from './components/Result';\nimport {Statusbar} from './components/Statusbar';\nimport {RefreshBtn} from './components/RefreshBtn';\nimport {QuestionCount} from './components/QuestionCount';\nimport {QuestionText} from \"./components/QuestionText\";\nimport {AnswerSection} from \"./components/AnswerSection\";\nimport {ScoreLeftToWin} from \"./components/ScoreLeftToWin\";\n\n\n\nexport const App = () => {\n  const questions = Data;\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [abc, setabc] = useState(true);\n\n  const handleAnswerOptionClick = (isCorrect: boolean) => {\n\n    if (isCorrect) {\n      setScore(score => score + 1);\n    }\n\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n\n      setCurrentQuestion(nextQuestion);\n\n    } else {\n\n      setShowScore(true);\n\n    }\n\n  };\n\n  const handleRefresh = () => {\n\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n\n  };\n\n\n  let status = (score < questions.length) ? 'МЕГАПЛОХ' : 'МЕГАХОРОШ';\n  let ScoreLeft = questions.length - score\n\n  if (ScoreLeft = 0) {\n    setabc(false)\n  }\n  \n  \n\n  return (\n    <div className=\"app\">\n      {showScore\n        ?\n        <div className=\"section__score\">\n          {abc \n            ? \n          <><Result score={score} questions={questions} />\n          <Statusbar score={score} questions={questions} status={status} />\n          <ScoreLeftToWin ScoreLeftToWin={ScoreLeft} questions={questions} /><RefreshBtn handleRefresh={handleRefresh} /></>\n          :\n          <><Result score={score} questions={questions} /><Statusbar score={score} questions={questions} status={status} /><RefreshBtn handleRefresh={handleRefresh} /></>\n}\n        </div>\n        : <div className='quizz'>\n          \n          <div className='question-section'>\n            <QuestionCount currentQuestion={currentQuestion} questions={questions}/>\n            <QuestionText questions={questions[currentQuestion]}/>\n            <AnswerSection questions={questions[currentQuestion]} handleAnswerOptionClick={handleAnswerOptionClick}/>\n          </div>\n\n        </div>\n        }\n        </div>\n\n\n  );\n}\n\n\n\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AACA,SAAQC,cAAR,QAA6B,6BAA7B;;;AAIA,OAAO,MAAMC,GAAG,GAAG,MAAM;EAAA;;EACvB,MAAMC,SAAS,GAAGT,IAAlB;EAEA,MAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,CAAD,CAAtD;EACA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACiB,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,CAAC,IAAD,CAA9B;;EAEA,MAAMmB,uBAAuB,GAAIC,SAAD,IAAwB;IAEtD,IAAIA,SAAJ,EAAe;MACbN,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAR;IACD;;IAGD,MAAMQ,YAAY,GAAGV,eAAe,GAAG,CAAvC;;IAEA,IAAIU,YAAY,GAAGX,SAAS,CAACY,MAA7B,EAAqC;MAEnCV,kBAAkB,CAACS,YAAD,CAAlB;IAED,CAJD,MAIO;MAELL,YAAY,CAAC,IAAD,CAAZ;IAED;EAEF,CAnBD;;EAqBA,MAAMO,aAAa,GAAG,MAAM;IAE1BX,kBAAkB,CAAC,CAAD,CAAlB;IACAE,QAAQ,CAAC,CAAD,CAAR;IACAE,YAAY,CAAC,KAAD,CAAZ;EAED,CAND;;EASA,IAAIQ,MAAM,GAAIX,KAAK,GAAGH,SAAS,CAACY,MAAnB,GAA6B,UAA7B,GAA0C,WAAvD;EACA,IAAIG,SAAS,GAAGf,SAAS,CAACY,MAAV,GAAmBT,KAAnC;;EAEA,IAAIY,SAAS,GAAG,CAAhB,EAAmB;IACjBP,MAAM,CAAC,KAAD,CAAN;EACD;;EAID,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,UACGH,SAAS,gBAER;MAAK,SAAS,EAAC,gBAAf;MAAA,UACGE,GAAG,gBAEJ;QAAA,wBAAE,QAAC,MAAD;UAAQ,KAAK,EAAEJ,KAAf;UAAsB,SAAS,EAAEH;QAAjC;UAAA;UAAA;UAAA;QAAA,QAAF,eACA,QAAC,SAAD;UAAW,KAAK,EAAEG,KAAlB;UAAyB,SAAS,EAAEH,SAApC;UAA+C,MAAM,EAAEc;QAAvD;UAAA;UAAA;UAAA;QAAA,QADA,eAEA,QAAC,cAAD;UAAgB,cAAc,EAAEC,SAAhC;UAA2C,SAAS,EAAEf;QAAtD;UAAA;UAAA;UAAA;QAAA,QAFA,eAEmE,QAAC,UAAD;UAAY,aAAa,EAAEa;QAA3B;UAAA;UAAA;UAAA;QAAA,QAFnE;MAAA,gBAFI,gBAMJ;QAAA,wBAAE,QAAC,MAAD;UAAQ,KAAK,EAAEV,KAAf;UAAsB,SAAS,EAAEH;QAAjC;UAAA;UAAA;UAAA;QAAA,QAAF,eAAgD,QAAC,SAAD;UAAW,KAAK,EAAEG,KAAlB;UAAyB,SAAS,EAAEH,SAApC;UAA+C,MAAM,EAAEc;QAAvD;UAAA;UAAA;UAAA;QAAA,QAAhD,eAAiH,QAAC,UAAD;UAAY,aAAa,EAAED;QAA3B;UAAA;UAAA;UAAA;QAAA,QAAjH;MAAA;IAPF;MAAA;MAAA;MAAA;IAAA,QAFQ,gBAYN;MAAK,SAAS,EAAC,OAAf;MAAA,uBAEA;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACE,QAAC,aAAD;UAAe,eAAe,EAAEZ,eAAhC;UAAiD,SAAS,EAAED;QAA5D;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,YAAD;UAAc,SAAS,EAAEA,SAAS,CAACC,eAAD;QAAlC;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,aAAD;UAAe,SAAS,EAAED,SAAS,CAACC,eAAD,CAAnC;UAAsD,uBAAuB,EAAEQ;QAA/E;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA;IAFA;MAAA;MAAA;MAAA;IAAA;EAbN;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD,CA3EM;;GAAMV,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}