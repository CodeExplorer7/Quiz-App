{"ast":null,"code":"var _jsxFileName = \"/Users/vaceslav/new-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './App.css';\nimport Data from './components/Data.json';\nimport { Result } from './components/Result';\nimport { Statusbar } from './components/Statusbar';\nimport { RefreshBtn } from './components/RefreshBtn';\nimport { QuestionCount } from './components/QuestionCount';\nimport { QuestionText } from \"./components/QuestionText\";\nimport { AnswerSection } from \"./components/AnswerSection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const questions = Data;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score => score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleRefresh = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n  };\n\n  let status = score < questions.length ? 'Не оч((' : 'Красава';\n  let ScoreLeftToWin = questions.length - score;\n  console.log(sc);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section__score\",\n      children: [/*#__PURE__*/_jsxDEV(Result, {\n        score: score,\n        questions: questions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Statusbar, {\n        score: score,\n        questions: questions,\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RefreshBtn, {\n        handleRefresh: handleRefresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizz\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(QuestionCount, {\n          currentQuestion: currentQuestion,\n          questions: questions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(QuestionText, {\n          questions: questions[currentQuestion]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AnswerSection, {\n          questions: questions[currentQuestion],\n          handleAnswerOptionClick: handleAnswerOptionClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/sy2pvX1Q0450pE8xQIdkgXJpdM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Data","Result","Statusbar","RefreshBtn","QuestionCount","QuestionText","AnswerSection","App","questions","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","handleAnswerOptionClick","isCorrect","nextQuestion","length","handleRefresh","status","ScoreLeftToWin","console","log","sc"],"sources":["/Users/vaceslav/new-app/src/App.tsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport './App.css';\nimport Data from './components/Data.json';\nimport {Result} from './components/Result';\nimport {Statusbar} from './components/Statusbar';\nimport {RefreshBtn} from './components/RefreshBtn';\nimport {QuestionCount} from './components/QuestionCount';\nimport {QuestionText} from \"./components/QuestionText\";\nimport {AnswerSection} from \"./components/AnswerSection\";\n\n\n\nexport const App = () => {\n  const questions = Data;\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n\n  const handleAnswerOptionClick = (isCorrect: boolean) => {\n\n    if (isCorrect) {\n      setScore(score => score + 1);\n    }\n\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n\n      setCurrentQuestion(nextQuestion);\n\n    } else {\n\n      setShowScore(true);\n\n    }\n\n  };\n\n  const handleRefresh = () => {\n\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n\n  };\n\n\n  let status = (score < questions.length) ? 'Не оч((' : 'Красава';\n  let ScoreLeftToWin = questions.length - score\n  console.log (sc)\n\n  return (\n    <div className=\"app\">\n      {showScore\n        ?\n        <div className=\"section__score\">\n          <Result score={score} questions={questions} />\n          <Statusbar score={score} questions={questions} status={status} />\n          <RefreshBtn handleRefresh={handleRefresh}/>\n        </div>\n        : <div className='quizz'>\n          \n          <div className='question-section'>\n            <QuestionCount currentQuestion={currentQuestion} questions={questions}/>\n            <QuestionText questions={questions[currentQuestion]}/>\n            <AnswerSection questions={questions[currentQuestion]} handleAnswerOptionClick={handleAnswerOptionClick}/>\n          </div>\n\n        </div>\n        }\n        </div>\n\n\n  );\n}\n\n\n\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AACA,SAAQC,aAAR,QAA4B,4BAA5B;;AAIA,OAAO,MAAMC,GAAG,GAAG,MAAM;EAAA;;EACvB,MAAMC,SAAS,GAAGR,IAAlB;EAEA,MAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,CAAD,CAAtD;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMgB,uBAAuB,GAAIC,SAAD,IAAwB;IAEtD,IAAIA,SAAJ,EAAe;MACbJ,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAR;IACD;;IAGD,MAAMM,YAAY,GAAGR,eAAe,GAAG,CAAvC;;IAEA,IAAIQ,YAAY,GAAGT,SAAS,CAACU,MAA7B,EAAqC;MAEnCR,kBAAkB,CAACO,YAAD,CAAlB;IAED,CAJD,MAIO;MAELH,YAAY,CAAC,IAAD,CAAZ;IAED;EAEF,CAnBD;;EAqBA,MAAMK,aAAa,GAAG,MAAM;IAE1BT,kBAAkB,CAAC,CAAD,CAAlB;IACAE,QAAQ,CAAC,CAAD,CAAR;IACAE,YAAY,CAAC,KAAD,CAAZ;EAED,CAND;;EASA,IAAIM,MAAM,GAAIT,KAAK,GAAGH,SAAS,CAACU,MAAnB,GAA6B,SAA7B,GAAyC,SAAtD;EACA,IAAIG,cAAc,GAAGb,SAAS,CAACU,MAAV,GAAmBP,KAAxC;EACAW,OAAO,CAACC,GAAR,CAAaC,EAAb;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,UACGX,SAAS,gBAER;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACE,QAAC,MAAD;QAAQ,KAAK,EAAEF,KAAf;QAAsB,SAAS,EAAEH;MAAjC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,SAAD;QAAW,KAAK,EAAEG,KAAlB;QAAyB,SAAS,EAAEH,SAApC;QAA+C,MAAM,EAAEY;MAAvD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,UAAD;QAAY,aAAa,EAAED;MAA3B;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFQ,gBAON;MAAK,SAAS,EAAC,OAAf;MAAA,uBAEA;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACE,QAAC,aAAD;UAAe,eAAe,EAAEV,eAAhC;UAAiD,SAAS,EAAED;QAA5D;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,YAAD;UAAc,SAAS,EAAEA,SAAS,CAACC,eAAD;QAAlC;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,aAAD;UAAe,SAAS,EAAED,SAAS,CAACC,eAAD,CAAnC;UAAsD,uBAAuB,EAAEM;QAA/E;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA;IAFA;MAAA;MAAA;MAAA;IAAA;EARN;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAhEM;;GAAMR,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}